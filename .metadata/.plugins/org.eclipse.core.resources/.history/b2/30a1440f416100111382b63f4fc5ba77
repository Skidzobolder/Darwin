/*
 * Mutation.h
 *
 *  Created on: 3-feb.-2012
 *      Author: woutergl
 */

#ifndef MUTATION_H_
#define MUTATION_H_

#include "Globals.h"

class Mutation
{
protected:

	rapidxml::xml_node<>* m_Node;

public:

	Mutation(/*rapidxml::xml_node<>* node*/) // default constructor
    {
		//m_Node = node;
    }
    virtual ~Mutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();
};

class BitMutation : public Mutation
{
private:

public:

	BitMutation(/*rapidxml::xml_node<>* node*/) // default constructor
    {
		//m_Node = node;
    }
    virtual ~BitMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();
};



#endif /* MUTATION_H_ */

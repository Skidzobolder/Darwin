/*
 * Mutation.h
 *
 *  Created on: 3-feb.-2012
 *      Author: woutergl
 */

#ifndef MUTATION_H_
#define MUTATION_H_

#include "Globals.h"

class Mutation
{
protected:

	rapidxml::xml_document<> m_Doc;
	rapidxml::xml_node<>* m_Node;

public:

	Mutation() // default constructor
    {	}
    virtual ~Mutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};

class BitMutation : public Mutation
{
private:

public:

	BitMutation(rapidxml::xml_node<>* node, rapidxml::xml_document<> doc) // default constructor
    {
		m_Node = node;
		m_Doc = doc;
    }

	virtual ~BitMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};

class IntegerMutation : public Mutation
{
private:

public:

	IntegerMutation(rapidxml::xml_node<>* node, rapidxml::xml_document<> doc) // default constructor
    {
		m_Node = node;
		m_Doc = doc;
    }

	virtual ~IntegerMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};

class DoubleMutation : public Mutation
{
private:

public:

	DoubleMutation(rapidxml::xml_node<>* node, rapidxml::xml_document<> doc) // default constructor
    {
		m_Node = node;
		m_Doc = doc;
    }

	virtual ~DoubleMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};

class AlphanumMutation : public Mutation
{
private:

public:

	AlphanumMutation(rapidxml::xml_node<>* node, rapidxml::xml_document<> doc) // default constructor
    {
		m_Node = node;
		m_Doc = doc;
    }

	virtual ~AlphanumMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};

class CustomMutation : public Mutation
{
private:

public:

	CustomMutation(rapidxml::xml_node<>* node, rapidxml::xml_document<> doc) // default constructor
    {
		m_Node = node;
		m_Doc = doc;
    }

	virtual ~CustomMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};

class TreeMutation : public Mutation
{
private:

public:

	TreeMutation(rapidxml::xml_node<>* node, rapidxml::xml_document<> doc) // default constructor
    {
		m_Node = node;
		m_Doc = doc;
    }

	virtual ~TreeMutation() // default deconstructor
    {    }

    virtual rapidxml::xml_node<>* BitString();
    virtual rapidxml::xml_node<>* FlipBits();
    virtual rapidxml::xml_node<>* Boundary();
    virtual rapidxml::xml_node<>* Uniform();
    virtual rapidxml::xml_node<>* Gaussian();
    virtual rapidxml::xml_node<>* Duplication();
    virtual rapidxml::xml_node<>* Deletion();
    virtual rapidxml::xml_node<>* Insertion();

};



#endif /* MUTATION_H_ */

//============================================================================
// Name        : Tokamak.cpp
// Author      : Skidzobolder
// Version     :
// Copyright   : 
// Description : Translates tokamak genomes into text-file containing the 3 parameters
//============================================================================

#include <iostream>
#include <String>
#include <iomanip>
#include <vector>
#include <fstream>
#include <sstream>
#include <bitset>
#include <limits>
#include "rapidxml.hpp"


int main(int argc, char *argv[]) {
	std::string strFileName = "";

	if(argc == 2 || argc == 3){
		strFileName= argv[1];
	}

	std::cout << "loading file: " << strFileName << std::endl;
	std::ifstream t(strFileName.c_str());
	std::stringstream buffer;
	buffer << t.rdbuf();

	std::string input_xml = buffer.str() ;

    // make a safe-to-modify copy of input_xml
    // (you should never modify the contents of an std::string directly)
    std::vector<char> xml_copy(input_xml.begin(), input_xml.end());
    xml_copy.push_back('\0');

    // only use xml_copy from here on!
    rapidxml::xml_document<> doc;
    doc.parse<rapidxml::parse_declaration_node | rapidxml::parse_no_data_nodes>(&xml_copy[0]);
    rapidxml::xml_node<>* rootNode = doc.first_node("Genome");

    double dPower = 0.0;
    double dMagnetic = 0.0;
    double dPlasma = 0.0;

    /**
     * Binary
     */
    rapidxml::xml_node<>* powerNode = rootNode->first_node("Chromosome");
    rapidxml::xml_node<>* magneticNode = powerNode->next_sibling("Chromosome");
    rapidxml::xml_node<>* plasmaNode = magneticNode->next_sibling("Chromosome");


    std::string strBinary = powerNode->first_node("Gene")->value() ;

    unsigned long a = std::bitset<std::numeric_limits<unsigned long>::digits>(strBinary).to_ulong();

    std::cout << a << std::endl;

    /**
     * Integer
     */


    /**
     * Double
     */


    /**
     * Alphanum
     */


    /**
     * Custom
     */


    /**
     * List
     */



	return 0;
}
